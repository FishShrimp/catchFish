{"version":3,"sources":["assets/scripts/mainGame/TouchManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0CAAqC;AAE/B,IAAA,kBAAmC,EAAlC,oBAAO,EAAE,sBAAyB,CAAC;AAG1C;IAA0C,gCAAY;IADtD;QAAA,qEAiDC;QA7CG,KAAK;QAEL,YAAM,GAAY,IAAI,CAAC;QAEvB,YAAY;QACZ,mBAAa,GAAW,CAAC,CAAC;;QAuC1B,iBAAiB;IACrB,CAAC;IArCa,6BAAM,GAAhB;QACI,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;IACxE,CAAC;IAGO,kCAAW,GAAnB,UAAoB,CAAsB;QACtC,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,EAAE;YACvC,OAAO;SACV;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAEhC,YAAY;QACZ,IAAM,QAAQ,GAAY,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;QAEnF,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC/C,IAAM,MAAM,GAAW,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QACxC,IAAI,KAAK,GAAW,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;QAErD,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;YAC1D,KAAK,GAAG,CAAC,KAAK,CAAA;SACjB;aAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;YACjE,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAA;SAC7B;aAAM,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE;YACjE,KAAK,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;SAC7B;QACD;;;;WAIG;QACH,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;QAC1B,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,mBAAO,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;IACpD,CAAC;IAvCD;QADC,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;gDACK;IALN,YAAY;QADhC,OAAO;OACa,YAAY,CAgDhC;IAAD,mBAAC;CAhDD,AAgDC,CAhDyC,EAAE,CAAC,SAAS,GAgDrD;kBAhDoB,YAAY","file":"","sourceRoot":"/","sourcesContent":["import {MyEvent} from \"../Interface\";\n\nconst {ccclass, property} = cc._decorator;\n\n@ccclass\nexport default class TouchManager extends cc.Component {\n\n\n    // 炮台\n    @property(cc.Node)\n    weapon: cc.Node = null;\n\n    // 上一次点击的好时间\n    lastTouchTime: number = 0;\n\n\n    protected onLoad(): void {\n        this.node.on(cc.Node.EventType.TOUCH_START, this._touchStart, this);\n    }\n\n\n    private _touchStart(e: cc.Event.EventTouch): void {\n        if (Date.now() - this.lastTouchTime < 100) {\n            return;\n        }\n        this.lastTouchTime = Date.now();\n\n        // 世界坐标转局部坐标\n        const curTouch: cc.Vec2 = this.weapon.parent.convertToNodeSpaceAR(e.getLocation());\n\n        const x = Math.abs(curTouch.x - this.weapon.x);\n        const y = Math.abs(curTouch.y - this.weapon.y);\n        const radian: number = Math.atan(x / y);\n        let angle: number = cc.misc.radiansToDegrees(radian);\n\n        if (curTouch.x > this.weapon.x && curTouch.y > this.weapon.y) {\n            angle = -angle\n        } else if (curTouch.x > this.weapon.x && curTouch.y < this.weapon.y) {\n            angle = -(90 - angle) - 90\n        } else if (curTouch.x < this.weapon.x && curTouch.y < this.weapon.y) {\n            angle = (90 - angle) + 90;\n        }\n        /**\n         * 简便方法\n         const radian: number = Math.atan2(y, x);\n         let angle: number = cc.misc.radiansToDegrees(radian) - 90;\n         */\n        this.weapon.angle = angle;\n        cc.director.emit(MyEvent.TOUCHEND_SHOOT, angle);\n    }\n\n\n    // update (dt) {}\n}\n"]}